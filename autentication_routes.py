from fastapi import APIRouter
# a aplicacao vai ser organizada por exemplo: "dominiosite/auth/cadastro"



#vari√°vel que √© respons√°vel por uma caixa organizadora
# Dentro dele voc√™ coloca v√°rias rotas (@get, @post, etc).
# Ele por si s√≥ n√£o √© uma rota, √© s√≥ o agrupador.

# prefix: √© usado pra organizar a rota que tem a sua funcionalidade,
# por exemplo, pode ser = "/auth/cadastro" (vai fazer o cadastro)
#                         "/auth/login" (vai fazer o login)


# J√° as tags n√£o t√™m nenhum efeito t√©cnico na URL ou no roteamento.

# Elas servem somente pra documenta√ß√£o autom√°tica (/docs e /redoc).

# √â s√≥ um "r√≥tulo" que aparece no Swagger UI pra voc√™ n√£o se perder.

# üëâ Ent√£o:

# O router organiza de forma pr√°tica no c√≥digo e nas URLs reais.

# A tag organiza de forma visual e descritiva na doc.
auth_routerr = APIRouter(prefix="/auth", tags=["auth"])


@auth_routerr.get("/cadastro")
async def cadastros():
    return {
        "mensagem": "Usu√°rio cadastrado com suecesso!"
    }